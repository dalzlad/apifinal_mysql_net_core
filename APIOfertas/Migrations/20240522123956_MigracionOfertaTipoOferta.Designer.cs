// <auto-generated />
using APIOfertas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIOfertas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240522123956_MigracionOfertaTipoOferta")]
    partial class MigracionOfertaTipoOferta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIOfertas.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("TipoOfertaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoOfertaId");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("APIOfertas.Models.TipoOferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreTipoOferta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoOferta");
                });

            modelBuilder.Entity("APIOfertas.Models.Oferta", b =>
                {
                    b.HasOne("APIOfertas.Models.TipoOferta", "TipoOferta")
                        .WithMany("Oferta")
                        .HasForeignKey("TipoOfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOferta");
                });

            modelBuilder.Entity("APIOfertas.Models.TipoOferta", b =>
                {
                    b.Navigation("Oferta");
                });
#pragma warning restore 612, 618
        }
    }
}
